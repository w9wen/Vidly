@model IEnumerable<Vidly.Models.Customer>
@{
    ViewBag.Title="Customers";
    Layout="~/Views/Shared/_Layout.cshtml";
}

<div>
    <h1 class="display-4">Customers</h1>
    @if (!Model.Any())
    {
        <p>We don't have any customers here.</p>
    }else
    {
        <table id="customers" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Customers</th>
                    <th>Membership Type</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var customer in Model)
                {
                    <tr>
                        <td>@Html.ActionLink(customer.Name, "Edit", "Customers", new { id = customer.Id}, null)</td>
                        <td>@customer.MembershipType.Name</td>
                        <td>
                            <button data-customer-id="@customer.Id" class="btn-link js-delete">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div id="container">
            <button class="e-control e-btn" id="targetButton" role="button" e-ripple="true" style="position: absolute;">Open Dialog</button>
            <div id="dialog"></div>
        </div>

    }
</div>
@section scripts
{
    <script>

        @* var ele = document.getElementById('container');
        if(ele){
            ele.style.visibility = 'visible';
        }

        ej.base.enableRipple(true);

        // Initialize Dialog component
        var dialog = new ej.popups.Dialog({
            // Enables modal dialog
            isModal:true,
            // overlayClick event handler
            overlayClick: onOverlayClick,
            // Dialog content
            content: 'This is a modal dialog',
            // The Dialog shows within the target element
            target: document.getElementById("container"),
            // Dialog width
            width: '250px'
        });
        // Render initialized Dialog
        dialog.appendTo('#dialog');

        // Sample level code to handle the button click action
        document.getElementById('targetButton').onclick = function() {
            // Call the show method to open the Dialog
            dialog.show();
        }

        // Sample level code to hide the Dialog when click the Dialog overlay
        function onOverlayClick() {
            dialog.hide();
        } *@



        var dialog = new ej.popups.Dialog({
            // Enables modal dialog
            isModal:true,
            // overlayClick event handler
            overlayClick: onOverlayClick,
            // Dialog content
            content: 'This is a modal dialog',
            // The Dialog shows within the target element
            target: document.getElementById("container"),
            // Dialog width
            width: '250px'
        });
        // Render initialized Dialog
        dialog.appendTo('#dialog');



        // Sample level code to hide the Dialog when click the Dialog overlay
        function onOverlayClick() {
            dialog.hide();
        }









        $(document).ready(function(){
            $("#customers .js-delete").on("click", function(){
                var button = $(this);
                dialog.show();
                @* bootbox.confirm("bootbox said: Are you sure want to delete this customer?"); *@
                @* if(confirm("Are you sure you want to delete this customer?")){
                    $.ajax({
                        url: "/api/customers/" + $(this).attr("data-customer-id"),
                        method: "DELETE",
                        success: function(){
                            button.parents("tr").remove();
                        }
                    });
                } *@
            });
        });
    </script>
}